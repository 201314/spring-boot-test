<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置 -->
    <properties resource="./properties/datasource.properties"></properties>

    <context id="default" targetRuntime="MyBatis3" defaultModelType="flat">
        <!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化 Java 代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化 XML 代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <plugin type="mybatisExt.MyBatisDaoAnnotationPlugin"/>
        <plugin type="mybatisExt.LombokPlugin"/>
        <plugin type="mybatisExt.RenameJavaMapperPlugins">
            <property name="searchString" value="EntityMapper"/>
            <property name="replaceString" value="Mapper"/>
        </plugin>
        <plugin type="org.mybatis.generator.plugins.MapperAnnotationPlugin"/>

        <!-- optional，旨在创建class时，对注释进行控制 -->
        <!-- 这里的type里写的是你的实现类的类全路径 -->
        <commentGenerator type="mybatisExt.MyCommentGenerator">
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;characterEncoding=UTF8&amp;serverTimezone=GMT%2B8"
                        userId="root"
                        password="123456">
            <!-- 设置 useInformationSchema 属性为 true,获取表注释信息 -->
            <property name="useInformationSchema" value="true"/>
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- 生成模型的包名和位置 -->
        <javaModelGenerator targetPackage="com.qihoo.finance.tpay.trade.entity"
                            targetProject="D:\workspaces-ext\spring-boot-test\spring-mybatis-code-generator\src\main\java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 实体自动继续父类 -->
            <property name="rootClass" value="com.qihoo.finance.msf.api.entity.BaseEntity"/>
        </javaModelGenerator>

        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mybatis.mappings.tpay"
                         targetProject="D:\workspaces-ext\spring-boot-test\spring-mybatis-code-generator\src\main\resources">
            <!--TODO 不会覆盖Mapper-->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置 -->
        <javaClientGenerator targetPackage="com.qihoo.finance.tpay.trade.mapper"
                             targetProject="D:\workspaces-ext\spring-boot-test\spring-mybatis-code-generator\src\main\java"
                             type="XMLMAPPER">
        </javaClientGenerator>

        <!-- 要生成哪些相关表 -->
        <table tableName="t_product" domainObjectName="Product" schema="test"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false" enableSelectByPrimaryKey="false">
        </table>
        <table tableName="tp_trade_order" domainObjectName="TpTradeOrder" schema="test"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false" enableSelectByPrimaryKey="false">
        </table>
    </context>
</generatorConfiguration>