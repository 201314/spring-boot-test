logging:
  level:
    com.gitee.linzl: debug
server:
  port: 8081
spring:
  application:
    name: springboot-rabbitmq-producer    
  datasource:
    url: jdbc:mysql://localhost:3306/spring_test?useUnicode=true&characterEncoding=UTF8&serverTimezone=GMT%2B8
    username: root
    password: root@3001    
    driverClassName: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource     
  rabbitmq:
    addresses: 127.0.0.1
    host: 127.0.0.1
    port: 5672 #5672, 5671: used by AMQP 0-9-1 and 1.0 clients without and with TLS
    # 15672 网页端口号
    username: guest
    password: guest
    publisher-confirms: true #为了消息能收到回调
    publisher-returns: true #到queue失败,则回调return
    virtual-host: /
    listener:
      simple:
        #默认是不使用并发，设置消息者并发数，要考虑具体的业务场景，对那种对消息的顺序有苛刻要求的场景不适合并发消费
        concurrency: 2
#        max-concurrency: 
        #当rabbitmq要将队列中的一条消息投递给消费者时，会遍历该队列上的消费者列表，将消息投递给一个合适的消费者。
        #挑选消费者的一个依据就是看消费者对应的channel上未ack的消息数是否达到设置的prefetch_count个数，如果未ack的消息数达到prefetch_count的个数，则不符合要求
        prefetch: 1 #每个消费者可接收的消息个数,设置1时点对点将竞争消费
        #设置手动确认
        acknowledge-mode: MANUAL
        default-requeue-rejected: false #一定要设置成 false 不然无法消费的数据不会进入死信队列的
        retry:
          enabled: true #重发是在消费端应用内处理的，不是rabbitqq重发
        
#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.gitee.linzl.model
  global-config:
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: id-worker
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not-empty
      #逻辑删除配置（下面3个配置）
      logic-delete-value: 0
      logic-not-delete-value: 1
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false       
    